#!/usr/bin/env ksh
# -*- coding: utf-8 -*-

# export ZSH_DEBUG=true

# Remove dups from paths
typeset -aU path fpath

# Add some completions (we need this before compinit)
[ -e /usr/local/share/zsh/functions ] && fpath=(/usr/local/share/zsh/functions $fpath)
[ -e /usr/local/share/zsh/site-functions ] && fpath=(/usr/local/share/zsh/site-functions $fpath)

[ -e "/usr/local/bin/zsh" ] && export SHELL=/usr/local/bin/zsh
[ -e "/usr/bin/zsh" ] && export SHELL=/usr/bin/zsh

export ZSH_TMUX_AUTOSTART=false

export ZSH=${HOME}/.dotfiles
export DOTFILES="${HOME}/.dotfiles"
export DOTFILES_DIR="${DOTFILES}"
export DOTFILES_BIN="${DOTFILES}/bin"
export MOD_DIR="${DOTFILES_DIR}/zsh/mod"


# Make vim the default editor
if type -p vim > /dev/null; then
    export EDITOR=vim
fi

# Make nvim the default editor
if type -p nvim > /dev/null; then
    export EDITOR=nvim
fi

# shellcheck source=/dev/null
[ -e "${MOD_DIR}/config.zsh" ] && source "${MOD_DIR}/config.zsh"

# shellcheck source=/dev/null
[ -e "${MOD_DIR}/zsh.zsh" ] && source "${MOD_DIR}/zsh.zsh"

# shellcheck source=/dev/null
[ -e "${MOD_DIR}/aliases.zsh" ] && source "${MOD_DIR}/aliases.zsh"

autoload -Uz compinit
autoload -Uz add-zsh-hook # enable zsh hooks
autoload -Uz is-at-least

if [ -n "${ZSH_DEBUG}" ]; then
    zmodload zsh/zprof
fi

#
# ANTIBODY â€” plugin manager

# shellcheck source=/dev/null
source <(antibody init)

# setup antibody
antibody bundle hadenlabs/zsh-core branch:develop
antibody bundle luismayta/zsh-brew branch:develop
antibody bundle hadenlabs/zsh-nvm branch:develop
antibody bundle hadenlabs/zsh-rvm branch:develop
antibody bundle hadenlabs/zsh-goenv branch:develop
antibody bundle luismayta/zsh-pyenv branch:develop
antibody bundle luismayta/zsh-tfenv branch:develop
antibody bundle luismayta/zsh-rust branch:develop
antibody bundle zsh-users/zsh-syntax-highlighting
antibody bundle hadenlabs/zsh-git branch:develop
antibody bundle luismayta/zsh-keybase branch:develop
antibody bundle hadenlabs/zsh-templates branch:develop
antibody bundle hadenlabs/zsh-docker branch:develop
antibody bundle hadenlabs/zsh-ghq branch:develop
antibody bundle hadenlabs/zsh-ssh branch:develop
antibody bundle luismayta/zsh-issues branch:develop
antibody bundle hadenlabs/zsh-tmux branch:develop
antibody bundle luismayta/zsh-starship branch:develop
antibody bundle luismayta/zsh-notify branch:develop
antibody bundle luismayta/zsh-scmbreeze branch:develop
antibody bundle zsh-users/zsh-autosuggestions
antibody bundle zsh-users/zsh-history-substring-search
antibody bundle zdharma/fast-syntax-highlighting
antibody bundle Aloxaf/fzf-tab
antibody bundle zsh-users/zsh-completions
antibody bundle b4b4r07/zsh-vimode-visual


if type -p tmux > /dev/null; then
    [ -z "${TMUX}" ] && tmux new-session -A -s "${USER}"
fi

# shellcheck source=/dev/null
[ -s "${CUSTOMRC}" ] && source "${CUSTOMRC}"


setopt share_history
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_reduce_blanks

# remove duplicates path
if type -p path_remove_duplicate > /dev/null; then
    path_remove_duplicate
fi

# Auto completion
case "$OSTYPE" in
  darwin*)
    if [ $(date +'%j') != $(stat -f '%Sm' -t '%j' ~/.zcompdump) ]; then
        compinit
    else
        compinit -d
    fi
    ;;
esac

if [ -n "${ZSH_DEBUG}" ]; then
    zprof
fi

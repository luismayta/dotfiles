#!/usr/bin/env ksh
# -*- coding: utf-8 -*-
unset ZSH_DEBUG

# Add some completions (we need this before compinit)
[ -e /usr/share/zsh ] && fpath=(/usr/share/zsh/site-functions:/usr/share/zsh/functions/Calendar:/usr/share/zsh/functions/Chpwd:/usr/share/zsh/functions/Completion:/usr/share/zsh/functions/Completion/Base:/usr/share/zsh/functions/Completion/Linux:/usr/share/zsh/functions/Completion/Unix:/usr/share/zsh/functions/Completion/X:/usr/share/zsh/functions/Completion/Zsh:/usr/share/zsh/functions/Exceptions:/usr/share/zsh/functions/Math:/usr/share/zsh/functions/MIME:/usr/share/zsh/functions/Misc:/usr/share/zsh/functions/Newuser:/usr/share/zsh/functions/Prompts:/usr/share/zsh/functions/TCP:/usr/share/zsh/functions/VCS_Info:/usr/share/zsh/functions/VCS_Info/Backends:/usr/share/zsh/functions/Zftp:/usr/share/zsh/functions/Zle $fpath)
#

export ZSH_TMUX_AUTOSTART=false

export ZSH=${HOME}/.dotfiles
export DOTFILES="${HOME}/.dotfiles"
export DOTFILES_DIR="${DOTFILES}"
export DOTFILES_BIN="${DOTFILES}/bin"
export DOTFILES_MOD_DIR="${DOTFILES_DIR}/zsh/mod"

autoload -Uz compinit add-zsh-hook is-at-least

# Make vim the default editor
if type -p vim > /dev/null; then
    export EDITOR=vim
fi

# Make nvim the default editor
if type -p nvim > /dev/null; then
    export EDITOR=nvim
fi

# shellcheck source=/dev/null
[ -e "${DOTFILES_MOD_DIR}/main.zsh" ] && source "${DOTFILES_MOD_DIR}/main.zsh"


if [ -n "${ZSH_DEBUG}" ]; then
    zmodload zsh/zprof
fi

#
# ANTIBODY â€” plugin manager

# shellcheck source=/dev/null
source <(antibody init)

# setup antibody
antibody bundle hadenlabs/zsh-core branch:develop
antibody bundle luismayta/zsh-brew branch:develop
antibody bundle hadenlabs/zsh-nvm branch:develop
antibody bundle hadenlabs/zsh-rvm branch:develop
antibody bundle hadenlabs/zsh-goenv branch:develop
antibody bundle luismayta/zsh-pyenv branch:develop
antibody bundle hadenlabs/zsh-tfenv branch:develop
antibody bundle luismayta/zsh-rust branch:develop
antibody bundle zsh-users/zsh-syntax-highlighting
antibody bundle hadenlabs/zsh-git branch:develop
antibody bundle hadenlabs/zsh-keybase branch:develop
antibody bundle hadenlabs/zsh-templates branch:develop
antibody bundle hadenlabs/zsh-docker branch:develop
antibody bundle hadenlabs/zsh-ghq branch:develop
antibody bundle hadenlabs/zsh-tmux branch:develop
antibody bundle hadenlabs/zsh-starship branch:develop
antibody bundle luismayta/zsh-notify branch:develop
antibody bundle luismayta/zsh-scmbreeze branch:develop
antibody bundle zsh-users/zsh-autosuggestions
antibody bundle zsh-users/zsh-history-substring-search
antibody bundle zdharma/fast-syntax-highlighting
antibody bundle Aloxaf/fzf-tab
antibody bundle zsh-users/zsh-completions
antibody bundle b4b4r07/zsh-vimode-visual

if type -p tmux > /dev/null; then
    [ -z "${TMUX}" ] && tmux new-session -A -s "${USER}"
fi

# shellcheck source=/dev/null
[ -s "${CUSTOMRC}" ] && source "${CUSTOMRC}"

setopt share_history
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_reduce_blanks

# remove duplicates path
if type -p path::clean > /dev/null; then
    export PATH="$(path::clean ${PATH})"
    export FPATH="$(path::clean ${PATH})"
fi

# Auto completion
case "$OSTYPE" in
 darwin*)
if [ $(date +'%j') != $(stat -f '%Sm' -t '%j' ~/.zcompdump) ]; then
    compinit
else
    compinit -d
fi
;;
esac

if [ -n "${ZSH_DEBUG}" ]; then
    zprof
fi

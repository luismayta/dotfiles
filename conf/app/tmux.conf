# Core {{{

# Reattach each new window to the user bootstrap namespace
if-shell \
 'test "$(uname -s)" = Darwin' \
 'set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"'

# Maintain a 'gapless' sequence for windows number
set -g renumber-windows on

# Enable true color & italics support
# https://medium.com/@dubistkomisch/how-to-actually-get-italics-and-true-colour-to-work-in-iterm-tmux-vim-9ebe55ebc2be
set -g default-terminal "screen-256color"
set -s default-terminal "screen-256color"
# set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# Enable cursor shape modification in vim
# (https://github.com/neovim/neovim/wiki/FAQ)
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set -ag terminal-overrides ',screen*:cvvis=\E[34l\E[?25h'

# Make delay shorter
set -sg escape-time 0
# change the escape time in tmux to zero, improves vim responsiveness
# set-option -sg escape-time 0 

# Unding default prefix and set it to Ctrl-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Make windows / panes index start with 1
set -g base-index 1
set -g pane-base-index 1

# Visual notification of activity in other windows
setw -g monitor-activity on

# Prevent tmux from displaying "Activity in window X" messages.
set -g visual-activity on

set-option -g bell-action any
set-option -g visual-bell off

# Window options {{{
  # window is only constrained in size if a smaller client is actively looking at it.
    setw -g aggressive-resize on
    setw -g automatic-rename on # rename window to reflect current program
    set -g renumber-windows on  # renumber windows when a window is closed
    set -g set-titles on                        # set terminal title
    set -g set-titles-string '#h ❐ #S ● #I #W'
    set-window-option -g clock-mode-style 24
# }}}

# Increase scrollback history
set-option -g history-limit 500000

set -g default-shell $SHELL

# Set copy-mode to act more like vim
set -g mode-keys vi
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel pbcopy
bind-key -Tcopy-mode-vi Escape send -X cancel
bind-key -Tcopy-mode-vi V send -X rectangle-toggle
# }}}

# Splits {{{

# Spliting (and keep the cwd)
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind "\\" split-window -fh -c "#{pane_current_path}"
bind _ split-window -fv -c "#{pane_current_path}"

# Resize
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Selecting
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Spread panes evenly
unbind =
bind = select-layout tiled

# }}}

# Key bindings {{{

# Reload config file
unbind r
bind r display "Reloading..." \; source-file ~/.tmux.conf \; display "Reloaded!"

# Clean scrint 
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

# Save entire tmux history to a file - file will be on machine where tmux is
# running
unbind *
bind-key * display "save history..." \; command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

# Synchronize all panes
bind y setw synchronize-panes

# Toggle mouse mode
bind M set-option mouse
set-option -g mouse on

# Set default name for new windows
bind-key c new-window -n '<unamed>' -c "#{pane_current_path}"

# Create a new session
bind-key C command-prompt -p "Name of new session: " "new-session -s '%%' -c \"#{pane_current_path}\""

# Easy layout changing
bind-key -n M-1 select-layout even-horizontal
bind-key -n M-2 select-layout even-vertical
bind-key -n M-3 select-layout main-horizontal
bind-key -n M-4 select-layout main-vertical
bind-key -n M-5 select-layout tiled

# }}}

# show instance of aws {{{
    bind W display "loading myaws..." \; new-window 'myaws ec2 ls | peco'
# }}}

# show process running {{{
    bind T new-window 'htop --user=$(whoami)'
    bind t new-window 'ps aux | peco'
# }}}

# show list clients {{{
bind-key X\
    run-shell "tmux list-clients | cut -d' ' -f2 > /tmp/tmux-session-to-kill"\;\
    switch-client -p\;\
    run-shell "tmux kill-session -t $(cat /tmp/tmux-session-to-kill); rm /tmp/tmux-session-to-kill"
# }}}

# Theme {{{

# Status bar config
set -g status on
set -g status-position bottom
set -g status-interval 1
set -g status-justify "left"
set -g status-left-length 500
set -g status-right-length 500

# Pane border
# set -g pane-border-fg colour235
# set -g pane-active-border-fg blue

# Show border on bottom
# setw -g pane-border-status bottom
# setw -g pane-border-format '─'

# Status bar colors
# set -g status-fg brightwhite
# set -g status-bg black
# set -g message-fg yellow
# set -g message-bg black

# Window separator
# setw -g window-status-separator '#[fg=colour235 nobold] ⋅ #[bg=default fg=default]'

# Window item
# setw -g window-status-format "#[bg=black, noreverse]#{?window_activity_flag,#[fg=red],#[fg=colour235]}#I #W"
# setw -g window-status-bg green
# setw -g window-status-fg black
# set -g window-status-attr reverse
# set -g window-status-activity-attr none

# Selected window item
# setw -g window-status-current-format "#[fg=cyan bold, bg=black, noreverse]#I #{?window_zoomed_flag,[#W],#W}"
# setw -g window-status-current-attr dim

# Left side: session name
# set -g status-left "#[fg=yellow] tm:#[fg=green nobold]#S#{window-status-separator}"

# Right side: indicator when prefix is selected + right segments
# set -g status-right "#{?client_prefix,#[fg=blue bold]^A#{window-status-separator},}#($DOTFILES/tmux/right_segments.sh)"

# }}}
# Plugins {{{

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin "tmux-plugins/tmux-copycat"
set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @plugin 'yardnsm/tmux-1password'
set -g @plugin "tmux-plugins/tmux-pain-control"
#set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin "alexanderjeurissen/sombre.tmux"

# plugin 1password
#set -g @1password-subdomain '${1PASSWORD_SUBDOMAIN}'
#set -g @1password-vault '${1PASSWORD_VAULT}'
#set -g @1password-copy-to-clipboard 'on'

# Plugins configuration
set -g @resurrect-capture-pane-contents 'on'

#set -g @continuum-boot 'on'
#set -g @continuum-boot-options 'iterm,fullscreen'
#set -g @continuum-restore 'on'

# Initialize TPM
run '~/.tmux/plugins/tpm/tpm'

# }}}
